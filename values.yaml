# Default values for netbox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

###########################################################################
#
# Chart configuration
#
###########################################################################

## Override the default value when defining netbox.name.
nameOverride: ""

## Override the default value when defining netbox.fullname.
fullnameOverride: ""

## Set to true to use a bundled postgresql database
useBundlePostgresql: true

## Set to true to initialize the bundle postgresql database from a pg_dump file
# When using migration the values files values-migration.yaml and the "Netbox 
# migration" section bellow must be correctly configured and inclued when 
# installing netbox.
# Ex: helm install netbox -f values.yaml -f values-migration.yaml ./netbox-chart
useMigration: true

## Set one only one to true to chose between using bundled, external or
# sentinel redis
useBundleRedis: true
useExternalRedis: false
useSentinelRedis: false

## NetBox includes a housekeeping management command that should be run nightly.
# Set to false to disable the dayly cronjob.
useNetboxHousekeeping: true

## Only required for Netbox Jobs, e.g. Webhooks
useNetboxWorker: true

## Common labels shared with all component
commonLabels: {}

## Common annotations shared with all component
commonAnnotations: {}

## Provide passwords using existing secret
# If set, this Secret must contain the following keys:
# - db_password: database password (if postgresql.enabled is false and
#     externalDatabase.existingSecretName is blank)
# - email_password: SMTP user password
# - ldap_bind_password: Password for LDAP bind DN
# - napalm_password: NAPALM user password
# - redis_tasks_password: Redis password for tasks Redis instance (if
#     redis.enabled is false and tasksRedis.existingSecretName is blank)
# - redis_cache_password: Redis password for caching Redis instance (if
#     redis.enabled is false and cachingRedis.existingSecretName is blank)
# - secret_key: session encryption token (50+ random characters)
# - superuser_password: Password for the initial super-user account
# - superuser_api_token: API token created for the initial super-user account
existingSecret: ""


###########################################################################
#
# Netbox image
#
###########################################################################

image:
  repository: netboxcommunity/netbox
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

  image.imagePullSecrets: []


###########################################################################
#
# Netbox super user
#
###########################################################################
## The super user is the initial admin user that comme with the docker
# version of netbox. Use this user to create a real admin account and delete
# the iitial super user account.

# You can also use an existing secret for the superuser password and API token
# See `existingSecret` for details
superuser:
  name: admin
  email: admin@example.com
  password: admin
  apiToken: 0123456789abcdef0123456789abcdef01234567


###########################################################################
#
# Netbox ConfigMap (configuration)
#
###########################################################################

# -------------------------------------------------------------------------
# Required Configuration Settings
# https://docs.netbox.dev/en/stable/configuration/required-parameters/
# -------------------------------------------------------------------------

## This is a list of valid fully-qualified domain names (FQDNs) for the NetBox
# server. NetBox will not permit write access to the server via any other
# hostnames. The first FQDN in the list will be treated as the preferred name.
allowedHosts:
  - '*'

## Bundle database settings
# These options override the default values in the bundle postgresql chart
# values.yaml file. See the bitnami values.yaml file here:
# https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  auth:
    username: netbox
    database: netbox
  # For OpenShift, it is important that fsGroup and runAsUser fields are kept EMPTY unless
  # you you know what you are doing with uid and SCC
  primary:
    podSecurityContext:
      fsGroup:
    containerSecurityContext:
      runAsUser:
  readReplicas:
    podSecurityContext:
      fsGroup:
    containerSecurityContext:
      runAsUser:

## External database settings
# These are used if useBundlePostgresql is false, and are ignored otherwise
externalDatabase:
  host: localhost
  port: 5432
  database: netbox
  username: netbox
  password: ""
  existingSecretName: ""
  existingSecretKey: postgresql-password
  sslMode: prefer
  connMaxAge: 300
  disableServerSideCursors: false
  targetSessionAttrs: read-write


## Bundle redis settings
# These options override the default values in the bundle redis chart
# values.yaml file. See the bitnami values.yaml file here:
# https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml
redis:
  # For OpenShift, it is important that fsGroup and runAsUser fields are kept EMPTY unless
  # you you know what you are doing with uid and SCC
  master:
    podSecurityContext:
      fsGroup:
    containerSecurityContext:
      runAsUser:
  replica:
    podSecurityContext:
      fsGroup:
    containerSecurityContext:
      runAsUser:

## Bundle redis settings
# These are used if useBundleRedis is true, and are ignored otherwise
tasksRedis:
  host: netbox-redis
  port: 6379
  username: ""
  password: ""
  database: 0
  ssl: false
  insecureSkipTlsVerify: false
  caCertPath: ""
  existingSecretName: ""
  existingSecretKey: redis-password

cachingRedis:
  host: netbox-redis
  port: 6379
  username: ""
  password: ""
  database: 1
  ssl: false
  insecureSkipTlsVerify: false
  caCertPath: ""
  existingSecretName: ""
  existingSecretKey: redis-password

## External redis settings
# These are used if useExternalRedis is true, and are ignored otherwise
externalTasksRedis:
  host: netbox-redis
  port: 6379
  username: ""
  password: ""
  database: 0
  ssl: false
  insecureSkipTlsVerify: false
  caCertPath: ""
  existingSecretName: ""
  existingSecretKey: redis-password

externalCachingRedis:
  host: netbox-redis
  port: 6379
  username: ""
  password: ""
  database: 1
  ssl: false
  insecureSkipTlsVerify: false
  caCertPath: ""
  existingSecretName: ""
  existingSecretKey: redis-password

## Sentinel redis settings
# These are used if useSentinelRedis is true, and are ignored otherwise
sentinelTasksRedis:
  sentinels: []
  sentinelService: netbox-redis
  sentinelTimeout: 300
  username: ""
  password: ""
  database: 0
  ssl: false
  insecureSkipTlsVerify: false
  caCertPath: ""
  existingSecretName: ""
  existingSecretKey: redis-password

sentinelCachingRedis:
  sentinels: []
  sentinelService: netbox-redis
  sentinelTimeout: 300
  username: ""
  password: ""
  database: 1
  ssl: false
  insecureSkipTlsVerify: false
  caCertPath: ""
  existingSecretName: ""
  existingSecretKey: redis-password

# If provided, this should be a 50+ character string of random characters. It
# will be randomly generated if left blank.
# You can also use an existing secret with "secret_key" instead of "secretKey"
# See `existingSecret` for details
secretKey: ""


# -------------------------------------------------------------------------
# System
# https://docs.netbox.dev/en/stable/configuration/system/
# -------------------------------------------------------------------------

# Base URL path if accessing NetBox within a directory. For example, if
# installed at http://example.com/netbox/, set to 'netbox/'. If using
# Kubernetes Ingress, make sure you set ingress.hosts[].paths[] appropriately.
basePath: ''

# Set the default preferred language/locale
defaultLanguage: en-us

# Email settings
email:
  server: localhost
  port: 25
  username: ''
  password: ''
  useSSL: false
  useTLS: false
  sslCertFile: ''
  sslKeyFile: ''
  timeout: 10  # seconds
  from: ''

# Localization
enableLocalization: false

# HTTP proxies NetBox should use when sending outbound HTTP requests (e.g. for
# webhooks).
httpProxies: null

# IP addresses recognized as internal to the system. The debugging toolbar will
# be available only to clients accessing NetBox from an internal IP.
internalIPs: ['127.0.0.1', '::1']

# Enable custom logging. Please see the Django documentation for detailed
# guidance on configuring custom logs:
# https://docs.djangoproject.com/en/1.11/topics/logging/
logging: {}

# The file path to the location where media files (such as image attachments)
# are stored.
mediaRoot: /opt/netbox/netbox/media

# The file path to the location where custom reports will be kept.
reportsRoot: /opt/netbox/netbox/reports

# The file path to the location where custom scripts will be kept.
scriptsRoot: /opt/netbox/netbox/scripts

# By default uploaded media is stored in an attached volume. Using
# Django-storages is also supported. Provide the class path of the storage
# driver in storageBackend and any configuration options in storageConfig.
storageBackend: null
storageConfig: {}


# -------------------------------------------------------------------------
# Security & Authentication Parameters
# https://docs.netbox.dev/en/stable/configuration/security/
# -------------------------------------------------------------------------

# Permit the retrieval of API tokens after their creation.
allowTokenRetrieval: false

# URL schemes that are allowed within links in NetBox
allowedUrlSchemes: [file, ftp, ftps, http, https, irc, mailto, sftp, ssh, tel,
                    telnet, tftp, vnc, xmpp]

# This parameter acts as a pass-through for configuring Django's built-in
# password validators for local user accounts. If configured, these will be
# applied whenever a user's password is updated to ensure that it meets minimum
# criteria such as length or complexity.
# https://docs.netbox.dev/en/stable/configuration/optional-settings/#auth_password_validators
authPasswordValidators: []

# API Cross-Origin Resource Sharing (CORS) settings. If originAllowAll
# is set to true, all origins will be allowed. Otherwise, define a list of
# allowed origins using either originWhitelist or originRegexWhitelist. For
# more information, see https://github.com/ottoyiu/django-cors-headers
corsOriginAllowAll: false

# These settings specify a list of origins that are authorized to make cross-site
# API requests. Use CORS_ORIGIN_WHITELIST to define a list of exact hostnames, or
# CORS_ORIGIN_REGEX_WHITELIST to define a set of regular expressions. (These settings 
# have no effect if CORS_ORIGIN_ALLOW_ALL is True.) 
corsOriginWhitelist: []
corsOriginRegexWhitelist: [] # '^(https?://)?(\w+\.)?example\.com$'

# CSRF settings.  Needed for netbox v3.2.0 and newer. For more information
# see https://docs.netbox.dev/en/stable/configuration/optional-settings/#csrf_trusted_origins

# The name of the cookie to use for the cross-site request forgery (CSRF)
# authentication token.
csrfCookieName: csrftoken
# Defines a list of trusted origins for unsafe (e.g. POST) requests. This is
# a pass-through to Django's CSRF_TRUSTED_ORIGINS setting. Note that each
# host listed must specify a scheme (e.g. http:// or `https://).
csrfTrustedOrigins: []

# Exempt certain models from the enforcement of view permissions. Models listed
# here will be viewable by all users and by anonymous users. List models in the
# form `<app>.<model>`. Add '*' to this list to exempt all models.
exemptViewPermissions: []
## Exemple
# - dcim.site
# - dcim.region
# - ipam.prefix

# Automatically reset the lifetime of a valid session upon each authenticated
# request. Enables users to remain authenticated to NetBox indefinitely.
loginPersistence: false

# Setting this to True will permit only authenticated users to access any part
# of NetBox. By default, anonymous users are permitted to access most data in
# NetBox but not make any changes.
loginRequired: false

# The length of time (in seconds) for which a user will remain logged into the
# web UI before being prompted to re-authenticate.
loginTimeout: 1209600  # 14 days

# The view name or URL to which users are redirected after logging out.
logoutRedirectUrl: home

# The name to use for the session cookie.
sessionCookieName: sessionid


# -------------------------------------------------------------------------
# Remote Authentication Settings
# https://docs.netbox.dev/en/stable/configuration/remote-authentication/
# -------------------------------------------------------------------------

# If remoteAuthEnabled is set to false all other remote auth configuration
# will be ignored. See documentation linked above for full details
remoteAuthAutoCreateUser: true
remoteAuthBackend: netbox.authentication.RemoteUserBackend
remoteAuthDefaultGroups: []
remoteAuthDefaultPermissions: {}
remoteAuthEnabled: false
remoteAuthGroupHeader: HTTP_REMOTE_USER_GROUP
remoteAuthGroupSeparator: '|'
remoteAuthGroupSyncEnabled: false
remoteAuthHeader: HTTP_REMOTE_USER
remoteAuthSuperuserGroups: []
remoteAuthSuperusers: []
remoteAuthStaffGroups: []
remoteAuthStaffUsers: []


# -------------------------------------------------------------------------
# Data & Validation Parameters
# https://docs.netbox.dev/en/stable/configuration/data-validation/
# -------------------------------------------------------------------------

# This is a mapping of models to custom validators that have been defined
# locally to enforce custom validation logic.
customValidators: {}

# Some static choice fields on models can be configured with custom values.
# Each choice in the list must have a database value and a human-friendly
# label, and may optionally specify a color.
fieldChoices: {}


# -------------------------------------------------------------------------
# Default Value Parameters
# https://docs.netbox.dev/en/stable/configuration/default-values/
# -------------------------------------------------------------------------

# This is a dictionary defining the default preferences to be set for newly-
# created user accounts.
defaultUserPreferences: {}

# Determine how many objects to display per page within a list. (Default: 50)
paginateCount: 50

# The default value for the amperage field when creating new power feeds.
powerFeedDefaultAmperage: 15

# The default value (percentage) for the max_utilization field when creating
# new power feeds.
powerFeedMaxUtilisation: 80

# The default value for the voltage field when creating new power feeds.
powerFeedDefaultVoltage: 120

# Rack elevation size defaults, in pixels. For best results, the ratio of width
# to height should be roughly 10:1.
rackElevationDefaultUnitHeight: 22
rackElevationDefaultUnitWidth: 220


# -------------------------------------------------------------------------
# Plugin Parameters
# https://docs.netbox.dev/en/stable/configuration/plugins/
# -------------------------------------------------------------------------

# Enable installed plugins. Add the name of each plugin to the list.
plugins: []

# Plugins configuration settings. These settings are used by various plugins
# that the user may have installed. Each key in the dictionary is the name of
# an installed plugin and its value is a dictionary of settings.
pluginsConfig: {}


# -------------------------------------------------------------------------
# Date & Time Parameters
# https://docs.netbox.dev/en/stable/configuration/date-time/
# -------------------------------------------------------------------------

# Time zone (default: UTC)
timeZone: UTC

# Date/time formatting. See the following link for supported formats:
# https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
dateFormat: 'N j, Y'
shortDateFormat: 'Y-m-d'
timeFormat: 'g:i a'
shortTimeFormat: 'H:i:s'
dateTimeFormat: 'N j, Y g:i a'
shortDateTimeFormat: 'Y-m-d H:i'


# -------------------------------------------------------------------------
# Miscellaneous Parameters
# https://docs.netbox.dev/en/stable/configuration/miscellaneous/
# -------------------------------------------------------------------------

# Specify one or more name and email address tuples representing NetBox
# administrators. These people will be notified of application errors (assuming
# correct email settings are provided).
admins: []

# Optionally display a persistent banner at the bottom of every
# page. HTML is allowed.
bannerBottom: ''

# Text to include on the login page above the login form. HTML is allowed.
bannerLogin: ''

# Optionally display a persistent banner at the top of every
# page. HTML is allowed.
bannerTop: ''

# Maximum number of days to retain logged changes. Set to 0 to retain change
# logs indefinitely. (Default: 90)
changelogRetention: 90

# Enforcement of unique IP space can be toggled on a per-VRF basis. To enforce
# unique IP space within the global table (all prefixes and IP addresses not
# assigned to a VRF), set enforceGlobalUnique to True.
enforceGlobalUnique: false

# Enable the GraphQL API
graphQlEnabled: true

# The number of days to retain job results (scripts and reports). Set this to 0
# to retain job results in the database indefinitely.
#!!!!!! param name is "JOB_RETENTION" in 3.5 and later version !!!!!!
jobResultRetention: 90

# Setting this to True will display a "maintenance mode" banner at the top of
# every page.
maintenanceMode: false

# The URL to use when mapping physical addresses or GPS coordinates
mapsUrl: 'https://maps.google.com/?q='

# An API consumer can request an arbitrary number of objects by appending the
# "limit" parameter to the URL (e.g. "?limit=1000"). This setting defines the
# maximum limit. Setting it to 0 or None will allow an API consumer to request
# all objects by specifying "?limit=0".
maxPageSize: 1000

# Expose Prometheus monitoring metrics at the HTTP endpoint '/metrics'
metricsEnabled: false

# When determining the primary IP address for a device, IPv6 is preferred over
# IPv4 by default. Set this to True to prefer IPv4 instead.
preferIPv4: false

# This repository is used to check whether there is a new release of NetBox
# available. Set to null to disable the version check or use the URL below to
# check for release in the official NetBox repository.
releaseCheckUrl: null # https://api.github.com/repos/netbox-community/netbox/releases

# Maximum execution time for background tasks, in seconds.
rqDefaultTimeout: 300  # 5 mins


# -------------------------------------------------------------------------
# Development Parameters
# https://docs.netbox.dev/en/stable/configuration/development/
# -------------------------------------------------------------------------

# Set to True to enable server debugging. WARNING: Debugging introduces a
# substantial performance penalty and may reveal sensitive information about
# your installation. Only enable debugging while performing testing. Never
# enable debugging on a production system.
debug: false


# -------------------------------------------------------------------------
# LDAP Configuration
# -------------------------------------------------------------------------

# Check the documentations
# https://docs.netbox.dev/en/stable/installation/6-ldap/

# The following options are specific for backend "netbox.authentication.LDAPBackend"
# you can use an existing netbox secret with "ldap_bind_password" instead of "bindPassword"
# see https://django-auth-ldap.readthedocs.io

# When enabling LDAP support please see "Using LDAP Authentication" in README.md and
# uncomment ALL of the configuration settings below, or your configuration will be invalid.

ldapServerUri: 'ldap://domain.com'
ldapStartTls: true
ldapIgnoreCertErrors: false
ldapBindDn: 'CN=Netbox,OU=EmbeddedDevices,OU=MyCompany,DC=domain,dc=com'
ldapBindPassword: 'TopSecretPassword'
ldapUserDnTemplate: null
ldapUserSearchBaseDn: 'OU=Users,OU=MyCompany,DC=domain,dc=com'
ldapUserSearchAttr: 'sAMAccountName'
ldapGroupSearchBaseDn: 'OU=Groups,OU=MyCompany,DC=domain,dc=com'
ldapGroupSearchClass: 'group'
ldapGroupType: 'GroupOfNamesType'
ldapRequireGroupDn: ''
ldapFindGroupPerms: true
ldapMirrorGroups: true
ldapMirrorGroupsExcept: null
ldapCacheTimeout: 3600
ldapIsAdminDn: 'CN=Network Configuration Operators,CN=Builtin,DC=domain,dc=com'
ldapIsSuperUserDn: 'CN=Domain Admins,CN=Users,DC=domain,dc=com'
ldapAttrFirstName: 'givenName'
ldapAttrLastName: 'sn'
ldapAttrMail: 'mail'


# -------------------------------------------------------------------------
# Extra Configuration
# -------------------------------------------------------------------------

## Extra configuration settings
# You can pass additional YAML files to be loaded into NetBox's configuration.
# These can be passed as arbitrary configuration values set in the chart, or
# you can load arbitrary *.yaml keys from ConfigMaps and Secrets.
extraConfig: []
  # - values:
  #     EXTRA_SETTING_ONE: example
  #     ANOTHER_SETTING: foobar
  # - configMap: # pod.spec.volumes.configMap
  #     name: netbox-extra
  #     items: []
  #     optional: false
  # - secret: # same as pod.spec.volumes.secret
  #     secretName: netbox-extra
  #     items: []
  #     optional: false

# -------------------------------------------------------------------------
# Options removed in later verions
# -------------------------------------------------------------------------

napalm:
  # Credentials that NetBox will use to access live devices.
  username: ''
  password: ''

  # NAPALM timeout (in seconds). (Default: 30)
  timeout: 30

  # NAPALM optional arguments (see
  # http://napalm.readthedocs.io/en/latest/support/#optional-arguments).
  # Arguments must be provided as a dictionary.
  args: {}


###########################################################################
#
# Netbox CronJob (housekeeping)
#
###########################################################################

# Configuration of Cron settings
housekeeping:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 5
  schedule: '0 0 * * *'
  successfulJobsHistoryLimit: 5
  suspend: false
  
  podAnnotations: {}
  
  podLabels: {}

  podSecurityContext:
    fsGroup:
    runAsNonRoot: true
  
  extraInitContainers: []

  containers:
    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser:
      runAsGroup:

    ## Additional environment variables to set
    extraEnvs: []

     ## Additional volumes to mount
    extraVolumeMounts: []
    #  - name: extra-volume
    #    mountPath: /run/secrets/super-secret
    #    readOnly: true

    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    extraContainers: []

  extraVolumes: []

  nodeSelector: {}

  affinity: {}

  tolerations: []

  restartPolicy: OnFailure


###########################################################################
#
# Netbox Deployment
#
###########################################################################

deployment:
  # This options is overrlooked when autoscaling is enable
  replicaCount: 1

  updateStrategy: {}

  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    fsGroup:
    runAsNonRoot: true

  initContainers:
    image:
      repository: busybox
      tag: 1.32.1
      pullPolicy: IfNotPresent

    resources: {}

    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser:
      runAsGroup:

    extraInitContainers: []

  containers:
    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser:
      runAsGroup:

    # Skip the netbox-docker startup scripts which can pre-populate objects into a
    # fresh NetBox installation. By default these do nothing, but they take a while
    # to run, so we skip them. See:
    # https://github.com/netbox-community/netbox-docker/tree/master/startup_scripts
    skipStartupScripts: true

    # Display full traceback of errors that occur when applying database
    # migrations.
    dbWaitDebug: false

    extraEnvs: []

    readinessProbe:
      enabled: true
      initialDelaySeconds: 0
      timeoutSeconds: 1
      periodSeconds: 10
      successThreshold: 1

    extraVolumeMounts: []

    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    extraContainers: []

  extraVolumes: []

  nodeSelector: {}

  affinity: {}

  tolerations: []

  hostAliases: []

  topologySpreadConstraints: []
  #  - maxSkew: 1
  #    topologyKey: topology.kubernetes.io/zone
  #    whenUnsatisfiable: DoNotSchedule
  #    labelSelector:
  #      matchLabels:
  #        "app.kubernetes.io/component": netbox
  #        "app.kubernetes.io/name": netbox


###########################################################################
#
# Netbox migration
#
###########################################################################

migration:
  # The file must be put in the "files" folder
  filename: netbox-dump.sql


###########################################################################
#
# Netbox HorizontalPodAutoscaler
#
###########################################################################

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


###########################################################################
#
# Netbox Ingress
#
###########################################################################

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        # You can manually specify the service name and service port if
        # required. This could be useful if for exemple you are using the AWS
        # ALB Ingress Controller and want to set up automatic SSL redirect.
        # https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/tasks/ssl_redirect/#redirect-traffic-from-http-to-https
        # - path: /*
        #   backend:
        #     serviceName: ssl-redirect
        #     servicePort: use-annotation
        #
        # Or you can let the template set it for you.
        # Both types of rule can be combined.
        # NB: You may also want to set the basePath above
        - /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


###########################################################################
#
# Netbox PersistenteVolumeClaim
#
###########################################################################

persistence:
  media:
    enabled: true
    ##
    ## Existing claim to use
    existingClaim: ""
    ## Existing claim's subPath to use, e.g. "media" (optional)
    subPath: ""
    ##
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass: ""
    ## Persistent Volume Selector
    ## if enabled, define any Selectors for choosing existing Persistent Volumes here
    # selector:
    #   matchLabel:
    #     netbox-storage: media
    accessMode: ReadWriteOnce
    ##
    ## Persistant storage size request
    size: 1Gi

  ## Storage configuration for reports
  reports:
    enabled: false
    ##
    ## Existing claim to use
    existingClaim: ""
    ## Existing claim's subPath to use, e.g. "media" (optional)
    subPath: ""
    ##
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass: ""
    ## Persistent Volume Selector
    ## if enabled, define any Selectors for choosing existing Persistent Volumes here
    # selector:
    #   matchLabel:
    #     netbox-storage: reports
    accessMode: ReadWriteOnce
    ##
    ## Persistant storage size request
    size: 1Gi


###########################################################################
#
# Netbox Service
#
###########################################################################

service:
  annotations: {}
  type: ClusterIP
  port: 80
  nodePort: ""
  clusterIP: ""
  clusterIPs: []
  externalIPs: []
  externalTrafficPolicy: ""
  ipFamilyPolicy: ""
  loadBalancerIP: ""
  loadBalancerSourceRanges: []


###########################################################################
#
# Netbox ServiceAccount
#
###########################################################################

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  name: ""
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template


###########################################################################
#
# Netbox ServiceMonitor
#
###########################################################################

serviceMonitor:
  enabled: false
  additionalLabels: {}
  interval: 1m
  scrapeTimeout: 10s


###########################################################################
#
# Netbox Worker
#
###########################################################################

worker:
  # This options is overrlooked when autoscaling is enable
  replicaCount: 1

  updateStrategy: {}

  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    fsGroup:
    runAsNonRoot: true

  extraInitContainers: []

  containers:
    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser:
      runAsGroup:

    extraEnvs: []

    extraVolumeMounts: []

    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    extraContainers: []

  extraVolumes: []

  nodeSelector: {}

  affinity: {}

  tolerations: []

  hostAliases: []


###########################################################################
#
# Netbox Worker HorizontalPodAutoscaler
#
###########################################################################

workerAutoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


###########################################################################
#
# Netbox connection test
#
###########################################################################

test:
  image:
    repository: busybox
    tag: 1.32.1
    pullPolicy: IfNotPresent

  resources: {}
